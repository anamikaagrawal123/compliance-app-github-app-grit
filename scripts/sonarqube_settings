#!/usr/bin/env bash

export SONAR_INSTANCE
export SONAR_HOST_URL
export SONAR_USER
export SONAR_PASS
export SONAR_CONFIGURED

read -r SONAR_CONFIGURED <<< "$(get_env sonarqube | jq . 2>/dev/null)"

if [ -n "$SONAR_CONFIGURED" ]; then
  read -r SONAR_INSTANCE <<< "$(get_env sonarqube | jq -r '.parameters.name')"
  read -r SONAR_HOST_URL <<< "$(get_env sonarqube | jq -r '.parameters.dashboard_url' | sed 's:/*$::')"
  read -r SONAR_USER <<< "$(get_env sonarqube | jq -r '.parameters.user_login')"
  read -r SONAR_PASS <<< "$(get_env sonarqube | jq -r '.parameters.user_password')"
elif [[ -n "$BREAK_GLASS" ]]; then
  printf "Break-Glass mode is on, skipping the rest of the task..." >&2
  exit 0
else
  printf "SonarQube is not configured"
  exit 0 
fi

list_repos | while IFS= read -r repo ; do
  url="$(load_repo "$repo" url)"
  name=$(echo "$url" | cut -f5 -d/)
  path="$(load_repo "$repo" path)"

  if [ -f "$WORKSPACE"/"$path"/sonar-project.properties ]; then
    printf "Using user provided 'sonar-project.properties' file" >&2
  else
    SONAR_PROJECT_KEY=$name"-compliance-check"
    mkdir -p "$WORKSPACE"/"$path"
    touch "$WORKSPACE"/"$path"/sonar-project.properties

    cat << EOF > "$WORKSPACE"/"$path"/sonar-project.properties
sonar.projectKey=$SONAR_PROJECT_KEY
sonar.host.url=$SONAR_HOST_URL
sonar.sources=.
sonar.login=$SONAR_USER
sonar.password=$SONAR_PASS
EOF

  fi

done
